<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<title>Obfuscate more, obfuscate all!</title>
<meta name="Description" content="This allows you to create a layered scrambled Sandwich out of the functions and label sections of your obfuscated Autohotkey program.">

<link rel="stylesheet" href="mycss/standtemp.css" type="text/css">

<style type="text/css">
</style>
<script>
  function resizeIframe(obj) {
    obj.style.height = obj.contentWindow.document.body.scrollHeight + 20 + 'px';
  }
</script>
</head>
<body>

<iframe style="border-width:0px;" src="iFrames/header.htm" onload="resizeIframe(this)" width="100%" scrolling="no"/>
</iframe>

<div id="wrapcols">

<div id="mainconts">

<iframe style="border-width:0px;float:left" src="iFrames/toplinks.htm" width="100%" onload="resizeIframe(this)" scrolling="no"/>
</iframe>
<iframe style="border-width:0px;float:left" src="iFrames/topnote-toimprove.htm" width="100%" onload="resizeIframe(this)" scrolling="no"/>
</iframe>

<h1>Obfuscate more, obfuscate all!</h1>
Once you have obfuscate most of your variables you will realize that there are still some left-overs which are not obfuscated that might give some clues as what the portion of code is handling.
</br>For example you will realize that <b>Commands, operators, numbers and strings cannot be automatically obfuscated</b>.
</br>Fortunately there are some steps you can take to try to obfuscae nearly everything !

<h2><a name="stringsinvars"></a>Convert recurring Strings to variables</h2>
<div>
If you want to obfuscate strings you already know you can hide them with the ihidestr() function.
</br>However if a string is recurring, one simple solution can be to create a global or superglobal var with this string, replace all occurences of the string by this var (which would also be better for maintainability) and declare this var to the obfuscator.
</br>Thus the strings will be ofuscated as well!
</div>

<h2><a name="numbersinvars"></a>Convert numbers to variables</h2>
<div>
You will soon remark that all your numbers are not obfuscated automatically. If the number has some special meaning (ex:256 for AES256) and therefore is quite sensitive, or if there are recurring numbers (like numbers from 1 to 10), you can also apply a similar strategy as above by creating superglobals that would contain the values of these numbers and replace their uses by these variables.
</br>Thus sensitive and recurring numbers will be ofuscated as well!
</div>

<h2><a name="operatorsinfct"></a>Convert Autohotkey math operators into functions</h2>
<div>
Autohotkey standard math operators ( - + / // = etc.) CANNOT be obfuscated as they do not accept to be called dynamically.
</br>However you can:
</br>-Create or use custom function equvalents
</br>There are some libraries that have many function equvalents you can insert and use in your code to replace Autohotkey standard math operators. Or you can create yours. This is very useful to obfuscate sensitive math operators  which do not have standard Autohotkey function equivalent.
</br>ex: if (var1 / var2 - var3 = 15)
</br>could become
</br>if EQUALS(MINUS(DIVIDE(var1 , var2) , var3) , 15 )
</br>Thus Autohotkey math operators will be ofuscated as well!
</div>

<h2><a name="commandsinfct"></a>Convert Autohotkey commands into functions</h2>
<div>
Autohotkey standard commands CANNOT be obfuscated as they do not accept to be called dynamically.
</br>However there are 2 solutions you can use:
</br>-Replace them by their Autohotkey system function equivalent, if they exist.
</br>ex: StringSplit() instead of StringSplit, OutputVar, InputVar,...
</br>and declare these Autohotkey functions to the obfuscator.
</br>-Create or use custom function equvalents
</br>There are some libraries that have many function equvalents you can insert and use in your code to replace Autohotkey standard commands. Or you can create yours. This is very useful to obfuscate sensitive commmands which do not have standard Autohotkey function equivalent.
</br>ex: SetTimer
</br>Thus Autohotkey commands will be ofuscated as well!
</div>

<div id="rightcol">

</div>

</div>

</body>
</html>
